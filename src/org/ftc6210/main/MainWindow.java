/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ftc6210.main;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Label;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.TextField;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.geom.Line2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.input.KeyCode;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Busch_902818
 */
public class MainWindow extends javax.swing.JFrame implements ActionListener, Serializable{

    /**
     * Creates new form MainWindow
     */
    
    private PointModel points;
    private BufferedImage fieldImage;
    private Point selectedPoint, draggedPoint;
    private DefaultListModel<Point> pointListModel;
    
    public MainWindow() throws IOException {
        initComponents();
        
        points = new PointModel(false);
        pointListModel = new DefaultListModel<>();
        points_jList.setModel(pointListModel);
        
        
        
        fieldImage = ImageIO.read(getClass().getClassLoader().getResourceAsStream("res/field.png"));
        
        //  Update 30 times a second
        Timer timer = new Timer(1000/30, this);
        timer.start();
        
        speedSlider_jSlider.setMinimum(0);
        speedSlider_jSlider.setMaximum(100);
        speedSlider_jSlider.setMajorTickSpacing(1);
        
        setSelectedPoint(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainTabs_jTabbedPane = new javax.swing.JTabbedPane();
        workspace_jPanel = new javax.swing.JPanel();
        pointList_jScrollPane = new javax.swing.JScrollPane();
        points_jList = new javax.swing.JList();
        fieldView_jPanel = new FieldView(this);
        currentPointPanel_jPanel = new javax.swing.JPanel();
        generateCode_jButton = new javax.swing.JButton();
        notes_jScrollPane = new javax.swing.JScrollPane();
        notes_jTextArea = new javax.swing.JTextArea();
        currentPointName_jTextField = new javax.swing.JTextField();
        notes_jLabel = new javax.swing.JLabel();
        speedSlider_jSlider = new javax.swing.JSlider();
        speed_jLabel = new javax.swing.JLabel();
        redAllianceCode_jPanel = new javax.swing.JPanel();
        redAlliance_jScrollPane = new javax.swing.JScrollPane();
        redAlliance_jTextArea = new javax.swing.JTextArea();
        copyRed_jButton = new javax.swing.JButton();
        blueAllianceCode_jPanel = new javax.swing.JPanel();
        blueAlliance_jScrollPane = new javax.swing.JScrollPane();
        blueAlliance_jTextArea = new javax.swing.JTextArea();
        copyBlue_jButton = new javax.swing.JButton();
        configure_jPanel = new javax.swing.JPanel();
        robotMotors_jPanel = new javax.swing.JPanel();
        robotDiagram_jLabel = new javax.swing.JLabel();
        rightMotor_jLabel = new javax.swing.JLabel();
        leftMotor_jLabel = new javax.swing.JLabel();
        leftMotor1_jTextField = new javax.swing.JTextField();
        leftMotor2_jTextField = new javax.swing.JTextField();
        leftMotor3_jTextField = new javax.swing.JTextField();
        leftMotor4_jTextField = new javax.swing.JTextField();
        rightMotor1_jTextField = new javax.swing.JTextField();
        rightMotor2_jTextField = new javax.swing.JTextField();
        rightMotor3_jTextField = new javax.swing.JTextField();
        rightMotor4_jTextField = new javax.swing.JTextField();
        wheelD_jLabel = new javax.swing.JLabel();
        wheelD_jTextField = new javax.swing.JTextField();
        gyroEnabled_jLabel = new javax.swing.JLabel();
        gyroEnabled_jCheckBox = new javax.swing.JCheckBox();
        gyroName_jLabel = new javax.swing.JLabel();
        gyroName_jTextField = new javax.swing.JTextField();
        percentError_jLabel = new javax.swing.JLabel();
        drivePercentError_jTextField = new javax.swing.JTextField();
        drivePercentError_jLabel = new javax.swing.JLabel();
        turnPercentError_jLabel = new javax.swing.JLabel();
        turnPercentError_jTextField = new javax.swing.JTextField();
        jMenuBar = new javax.swing.JMenuBar();
        file_jMenu = new javax.swing.JMenu();
        save_jMenuItem = new javax.swing.JMenuItem();
        saveAs_jMenuItem = new javax.swing.JMenuItem();
        open_jSeparator = new javax.swing.JPopupMenu.Separator();
        open_jMenuItem = new javax.swing.JMenuItem();
        new_jMenuItem = new javax.swing.JMenuItem();
        close_jSeparator = new javax.swing.JPopupMenu.Separator();
        close_jMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FTC Autonomous Generator");
        setResizable(false);

        mainTabs_jTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mainTabs_jTabbedPaneStateChanged(evt);
            }
        });

        points_jList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        points_jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        points_jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                points_jListValueChanged(evt);
            }
        });
        pointList_jScrollPane.setViewportView(points_jList);

        fieldView_jPanel.setPreferredSize(new java.awt.Dimension(360, 360));
        fieldView_jPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldView_jPanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fieldView_jPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fieldView_jPanelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout fieldView_jPanelLayout = new javax.swing.GroupLayout(fieldView_jPanel);
        fieldView_jPanel.setLayout(fieldView_jPanelLayout);
        fieldView_jPanelLayout.setHorizontalGroup(
            fieldView_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        fieldView_jPanelLayout.setVerticalGroup(
            fieldView_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );

        generateCode_jButton.setText("Delete");
        generateCode_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateCode_jButtonActionPerformed(evt);
            }
        });

        notes_jTextArea.setColumns(20);
        notes_jTextArea.setRows(5);
        notes_jScrollPane.setViewportView(notes_jTextArea);

        currentPointName_jTextField.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        currentPointName_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentPointName_jTextFieldActionPerformed(evt);
            }
        });

        notes_jLabel.setText("Notes");

        speed_jLabel.setText("Speed");

        javax.swing.GroupLayout currentPointPanel_jPanelLayout = new javax.swing.GroupLayout(currentPointPanel_jPanel);
        currentPointPanel_jPanel.setLayout(currentPointPanel_jPanelLayout);
        currentPointPanel_jPanelLayout.setHorizontalGroup(
            currentPointPanel_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentPointPanel_jPanelLayout.createSequentialGroup()
                .addGroup(currentPointPanel_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(generateCode_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(currentPointPanel_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(speed_jLabel)
                        .addComponent(notes_jLabel)
                        .addComponent(currentPointName_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(currentPointPanel_jPanelLayout.createSequentialGroup()
                            .addGap(42, 42, 42)
                            .addComponent(speedSlider_jSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(notes_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        currentPointPanel_jPanelLayout.setVerticalGroup(
            currentPointPanel_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentPointPanel_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentPointName_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(currentPointPanel_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(speed_jLabel)
                    .addComponent(speedSlider_jSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(notes_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notes_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(generateCode_jButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout workspace_jPanelLayout = new javax.swing.GroupLayout(workspace_jPanel);
        workspace_jPanel.setLayout(workspace_jPanelLayout);
        workspace_jPanelLayout.setHorizontalGroup(
            workspace_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workspace_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldView_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(currentPointPanel_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pointList_jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addContainerGap())
        );
        workspace_jPanelLayout.setVerticalGroup(
            workspace_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workspace_jPanelLayout.createSequentialGroup()
                .addGroup(workspace_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(currentPointPanel_jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(workspace_jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pointList_jScrollPane)
                        .addGap(9, 9, 9))
                    .addGroup(workspace_jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(fieldView_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        mainTabs_jTabbedPane.addTab("Draw", workspace_jPanel);

        redAlliance_jTextArea.setColumns(20);
        redAlliance_jTextArea.setRows(5);
        redAlliance_jScrollPane.setViewportView(redAlliance_jTextArea);

        copyRed_jButton.setText("Copy Code");
        copyRed_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyRed_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout redAllianceCode_jPanelLayout = new javax.swing.GroupLayout(redAllianceCode_jPanel);
        redAllianceCode_jPanel.setLayout(redAllianceCode_jPanelLayout);
        redAllianceCode_jPanelLayout.setHorizontalGroup(
            redAllianceCode_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(redAllianceCode_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(redAllianceCode_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redAlliance_jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, redAllianceCode_jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(copyRed_jButton)))
                .addContainerGap())
        );
        redAllianceCode_jPanelLayout.setVerticalGroup(
            redAllianceCode_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(redAllianceCode_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(redAlliance_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copyRed_jButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainTabs_jTabbedPane.addTab("Red Alliance", redAllianceCode_jPanel);

        blueAlliance_jTextArea.setColumns(20);
        blueAlliance_jTextArea.setRows(5);
        blueAlliance_jScrollPane.setViewportView(blueAlliance_jTextArea);

        copyBlue_jButton.setText("Copy Code");
        copyBlue_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyBlue_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout blueAllianceCode_jPanelLayout = new javax.swing.GroupLayout(blueAllianceCode_jPanel);
        blueAllianceCode_jPanel.setLayout(blueAllianceCode_jPanelLayout);
        blueAllianceCode_jPanelLayout.setHorizontalGroup(
            blueAllianceCode_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blueAllianceCode_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(blueAllianceCode_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blueAlliance_jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, blueAllianceCode_jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(copyBlue_jButton)))
                .addContainerGap())
        );
        blueAllianceCode_jPanelLayout.setVerticalGroup(
            blueAllianceCode_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blueAllianceCode_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(blueAlliance_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(copyBlue_jButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainTabs_jTabbedPane.addTab("Blue Alliance", blueAllianceCode_jPanel);

        robotDiagram_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/robocfg.png"))); // NOI18N

        rightMotor_jLabel.setText("Right Motor Names");

        leftMotor_jLabel.setText("Left Motor Names");

        leftMotor1_jTextField.setText("leftDriveFront");

        leftMotor2_jTextField.setText("leftDriveBack");

        rightMotor1_jTextField.setText("rightDriveFront");

        rightMotor2_jTextField.setText("rightDriveBack");

        javax.swing.GroupLayout robotMotors_jPanelLayout = new javax.swing.GroupLayout(robotMotors_jPanel);
        robotMotors_jPanel.setLayout(robotMotors_jPanelLayout);
        robotMotors_jPanelLayout.setHorizontalGroup(
            robotMotors_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(robotMotors_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(robotMotors_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftMotor_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leftMotor1_jTextField)
                    .addComponent(leftMotor2_jTextField)
                    .addComponent(leftMotor3_jTextField)
                    .addComponent(leftMotor4_jTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(robotDiagram_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(robotMotors_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rightMotor_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rightMotor1_jTextField)
                    .addComponent(rightMotor2_jTextField)
                    .addComponent(rightMotor3_jTextField)
                    .addComponent(rightMotor4_jTextField))
                .addContainerGap())
        );
        robotMotors_jPanelLayout.setVerticalGroup(
            robotMotors_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(robotMotors_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(robotMotors_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(robotMotors_jPanelLayout.createSequentialGroup()
                        .addComponent(robotDiagram_jLabel)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, robotMotors_jPanelLayout.createSequentialGroup()
                        .addGroup(robotMotors_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, robotMotors_jPanelLayout.createSequentialGroup()
                                .addComponent(leftMotor_jLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(leftMotor1_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(leftMotor2_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(leftMotor3_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(leftMotor4_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, robotMotors_jPanelLayout.createSequentialGroup()
                                .addComponent(rightMotor_jLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rightMotor1_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rightMotor2_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rightMotor3_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rightMotor4_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(99, 99, 99))))
        );

        wheelD_jLabel.setText("Wheel Diameter (in)");

        wheelD_jTextField.setText("4");
        wheelD_jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                wheelD_jTextFieldKeyTyped(evt);
            }
        });

        gyroEnabled_jLabel.setText("Gyro Sensor?");

        gyroEnabled_jCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, gyroName_jTextField, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), gyroEnabled_jCheckBox, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        gyroEnabled_jCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gyroEnabled_jCheckBoxActionPerformed(evt);
            }
        });

        gyroName_jLabel.setText("Gyro Name");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, gyroName_jTextField, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), gyroName_jLabel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gyroName_jTextField.setText("gyroSensor");

        percentError_jLabel.setText("Percent Error");
        percentError_jLabel.setToolTipText("Calculate by THEORETICAL / ACTUAL");

        drivePercentError_jTextField.setText("1.00");
        drivePercentError_jTextField.setToolTipText("Inches Wanted / Inches Driven");
        drivePercentError_jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                drivePercentError_jTextFieldKeyTyped(evt);
            }
        });

        drivePercentError_jLabel.setText("Drive");
        drivePercentError_jLabel.setToolTipText("Inches Wanted / Inches Driven");

        turnPercentError_jLabel.setText("Turn");
        turnPercentError_jLabel.setToolTipText("Deg. Wanted / Deg. Turned");

        turnPercentError_jTextField.setText("1.00");
        turnPercentError_jTextField.setToolTipText("Deg. Wanted / Deg. Turned");
        turnPercentError_jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                turnPercentError_jTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout configure_jPanelLayout = new javax.swing.GroupLayout(configure_jPanel);
        configure_jPanel.setLayout(configure_jPanelLayout);
        configure_jPanelLayout.setHorizontalGroup(
            configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configure_jPanelLayout.createSequentialGroup()
                .addGroup(configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configure_jPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(wheelD_jLabel)
                            .addComponent(gyroEnabled_jLabel)
                            .addComponent(gyroName_jLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(gyroEnabled_jCheckBox)
                            .addComponent(gyroName_jTextField)
                            .addComponent(wheelD_jTextField)))
                    .addGroup(configure_jPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(drivePercentError_jLabel)
                        .addGap(3, 3, 3)
                        .addComponent(drivePercentError_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(turnPercentError_jLabel)
                        .addGap(3, 3, 3)
                        .addComponent(turnPercentError_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(configure_jPanelLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(percentError_jLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(robotMotors_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        configure_jPanelLayout.setVerticalGroup(
            configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configure_jPanelLayout.createSequentialGroup()
                .addGroup(configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configure_jPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(robotMotors_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(configure_jPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wheelD_jLabel)
                            .addComponent(wheelD_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gyroEnabled_jCheckBox)
                            .addComponent(gyroEnabled_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gyroName_jLabel)
                            .addComponent(gyroName_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(percentError_jLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(configure_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drivePercentError_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(drivePercentError_jLabel)
                            .addComponent(turnPercentError_jLabel)
                            .addComponent(turnPercentError_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        mainTabs_jTabbedPane.addTab("Configure Robot", configure_jPanel);

        file_jMenu.setText("File");
        file_jMenu.setFocusPainted(true);
        file_jMenu.setName("File"); // NOI18N

        save_jMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        save_jMenuItem.setText("Save");
        save_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_jMenuItemActionPerformed(evt);
            }
        });
        file_jMenu.add(save_jMenuItem);

        saveAs_jMenuItem.setText("Save As...");
        saveAs_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAs_jMenuItemActionPerformed(evt);
            }
        });
        file_jMenu.add(saveAs_jMenuItem);
        file_jMenu.add(open_jSeparator);

        open_jMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        open_jMenuItem.setText("Open");
        open_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open_jMenuItemActionPerformed(evt);
            }
        });
        file_jMenu.add(open_jMenuItem);

        new_jMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        new_jMenuItem.setText("New");
        new_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_jMenuItemActionPerformed(evt);
            }
        });
        file_jMenu.add(new_jMenuItem);
        file_jMenu.add(close_jSeparator);

        close_jMenuItem.setText("Close");
        close_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_jMenuItemActionPerformed(evt);
            }
        });
        file_jMenu.add(close_jMenuItem);

        jMenuBar.add(file_jMenu);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabs_jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabs_jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateCode_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateCode_jButtonActionPerformed
        points.removePoint(selectedPoint);
        pointListModel.remove(pointListModel.indexOf(selectedPoint));
    }//GEN-LAST:event_generateCode_jButtonActionPerformed

    private void copyRed_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyRed_jButtonActionPerformed
        StringSelection stringSelection = new StringSelection(redAlliance_jTextArea.getText());
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(stringSelection, null);
    }//GEN-LAST:event_copyRed_jButtonActionPerformed

    private void fieldView_jPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldView_jPanelMouseReleased
        java.awt.Point mouse = fieldView_jPanel.getMousePosition();
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1)
            draggedPoint = null;
        
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON3)
            addPoint(evt.getX(), evt.getY());
    }//GEN-LAST:event_fieldView_jPanelMouseReleased

    private Point addPoint(int x, int y) {
        
        Point p = new Point(x, y, "Point " + (points.getPoints().size() + 1), 50, "", false);
        points.addPoint(p);
        pointListModel.addElement(p);
        return p;
    }
    
    private void fieldView_jPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldView_jPanelMouseClicked

    }//GEN-LAST:event_fieldView_jPanelMouseClicked

    private void fieldView_jPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldView_jPanelMousePressed
        java.awt.Point mouse = fieldView_jPanel.getMousePosition();
        
        if(mouse == null)return;
        
        
        Point toSelect = null;
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1) // LEFT CLICK TO DRAG
            for(Point p : points) {
                Rectangle hitbox = new Rectangle(p.getX()-5, p.getY() -5, 10, 10);
                if(hitbox.contains(mouse)) {
                    toSelect = p;
                    break;
                }
            }
        
        if(draggedPoint == null)
            draggedPoint = toSelect;
        if(toSelect != null)
            setSelectedPoint(toSelect);
        
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON2) {
            
        }
        
    }//GEN-LAST:event_fieldView_jPanelMousePressed

    private void points_jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_points_jListValueChanged
        Point p = pointListModel.get(points_jList.getSelectedIndex());
        if(p != selectedPoint)
            setSelectedPoint(p);
        
    }//GEN-LAST:event_points_jListValueChanged

    private void currentPointName_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentPointName_jTextFieldActionPerformed
        selectedPoint.setName(currentPointName_jTextField.getText());
        pointListModel.set(pointListModel.indexOf(selectedPoint), selectedPoint);
    }//GEN-LAST:event_currentPointName_jTextFieldActionPerformed

    private void mainTabs_jTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mainTabs_jTabbedPaneStateChanged
        generateCode();
    }//GEN-LAST:event_mainTabs_jTabbedPaneStateChanged

    private void wheelD_jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wheelD_jTextFieldKeyTyped
        try {
            Integer.parseInt(evt.getKeyChar() + "");
        } catch (Exception e) {
            evt.consume();
        }
    }//GEN-LAST:event_wheelD_jTextFieldKeyTyped

    private void gyroEnabled_jCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gyroEnabled_jCheckBoxActionPerformed

    }//GEN-LAST:event_gyroEnabled_jCheckBoxActionPerformed

    private void copyBlue_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyBlue_jButtonActionPerformed
        StringSelection stringSelection = new StringSelection(blueAlliance_jTextArea.getText());
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(stringSelection, null);
    }//GEN-LAST:event_copyBlue_jButtonActionPerformed

    private void drivePercentError_jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_drivePercentError_jTextFieldKeyTyped
        try {
            Double.parseDouble(evt.getKeyCode() + "");
        } catch (Exception e) {
            evt.consume();
        }
    }//GEN-LAST:event_drivePercentError_jTextFieldKeyTyped

    private void turnPercentError_jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_turnPercentError_jTextFieldKeyTyped
        try {
            Double.parseDouble(evt.getKeyCode() + "");
        } catch (Exception e) {
            evt.consume();
        }
    }//GEN-LAST:event_turnPercentError_jTextFieldKeyTyped

    private void save_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_jMenuItemActionPerformed
        
    }//GEN-LAST:event_save_jMenuItemActionPerformed

    private void saveAs_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAs_jMenuItemActionPerformed
        
    }//GEN-LAST:event_saveAs_jMenuItemActionPerformed

    private void open_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open_jMenuItemActionPerformed
        
    }//GEN-LAST:event_open_jMenuItemActionPerformed

    private void new_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_jMenuItemActionPerformed
        
    }//GEN-LAST:event_new_jMenuItemActionPerformed

    private void close_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_jMenuItemActionPerformed
        
    }//GEN-LAST:event_close_jMenuItemActionPerformed

    
    public void generateCode() {
        if(points == null || points.getPoints().size() <= 1) return;
        blueAlliance_jTextArea.setText("");
        redAlliance_jTextArea.setText("");
        CodeGenerator gen = new CodeGenerator(points,  new RobotHardware(getWheelD(), getMotorNames()[0], getMotorNames()[1]));
        if(points.getPoint(0).getX() < 175)
            blueAlliance_jTextArea.setText(gen.getCode());
        else
            redAlliance_jTextArea.setText(gen.getCode());
    }
    
    
    public String[][] getMotorNames() {
        ArrayList<String> leftMotors = new ArrayList<>(), rightMotors = new ArrayList<>();
        JTextField[] leftFields = {leftMotor1_jTextField, leftMotor2_jTextField, leftMotor3_jTextField, leftMotor4_jTextField};
        JTextField[] rightFields = {rightMotor1_jTextField, rightMotor2_jTextField, rightMotor3_jTextField, rightMotor4_jTextField};
        for(JTextField f : leftFields)
            if(!f.getText().isEmpty())
                leftMotors.add(f.getText());
        for(JTextField f : rightFields)
            if(!f.getText().isEmpty())
                rightMotors.add(f.getText());
        
        return new String[][]{leftMotors.toArray(new String[0]), rightMotors.toArray(new String[0])};       
    }
    
    public int getWheelD() {
        int d;
        try {
            d = Integer.parseInt(wheelD_jTextField.getText());
        } catch (NumberFormatException e) {
            return 4;
        }
        return d;
        
    }
    
    public String getSensorName() {
        if(!gyroName_jTextField.isEnabled()) 
            return null;
        return gyroName_jTextField.getText();
    }
    
    public double getDrivePercentError() {
        try{
            return Double.parseDouble(drivePercentError_jTextField.getText());
        } catch (NumberFormatException e) {
            return 1;
        }
    }
    
    public double getTurnPercentError() {
        try {
            return Double.parseDouble(turnPercentError_jTextField.getText());
        } catch (Exception e) {
            return 1;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainWindow().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel blueAllianceCode_jPanel;
    private javax.swing.JScrollPane blueAlliance_jScrollPane;
    private javax.swing.JTextArea blueAlliance_jTextArea;
    private javax.swing.JMenuItem close_jMenuItem;
    private javax.swing.JPopupMenu.Separator close_jSeparator;
    private javax.swing.JPanel configure_jPanel;
    private javax.swing.JButton copyBlue_jButton;
    private javax.swing.JButton copyRed_jButton;
    private javax.swing.JTextField currentPointName_jTextField;
    private javax.swing.JPanel currentPointPanel_jPanel;
    private javax.swing.JLabel drivePercentError_jLabel;
    private javax.swing.JTextField drivePercentError_jTextField;
    protected javax.swing.JPanel fieldView_jPanel;
    private javax.swing.JMenu file_jMenu;
    private javax.swing.JButton generateCode_jButton;
    private javax.swing.JCheckBox gyroEnabled_jCheckBox;
    private javax.swing.JLabel gyroEnabled_jLabel;
    private javax.swing.JLabel gyroName_jLabel;
    private javax.swing.JTextField gyroName_jTextField;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JTextField leftMotor1_jTextField;
    private javax.swing.JTextField leftMotor2_jTextField;
    private javax.swing.JTextField leftMotor3_jTextField;
    private javax.swing.JTextField leftMotor4_jTextField;
    private javax.swing.JLabel leftMotor_jLabel;
    private javax.swing.JTabbedPane mainTabs_jTabbedPane;
    private javax.swing.JMenuItem new_jMenuItem;
    private javax.swing.JLabel notes_jLabel;
    private javax.swing.JScrollPane notes_jScrollPane;
    private javax.swing.JTextArea notes_jTextArea;
    private javax.swing.JMenuItem open_jMenuItem;
    private javax.swing.JPopupMenu.Separator open_jSeparator;
    private javax.swing.JLabel percentError_jLabel;
    private javax.swing.JScrollPane pointList_jScrollPane;
    private javax.swing.JList points_jList;
    private javax.swing.JPanel redAllianceCode_jPanel;
    private javax.swing.JScrollPane redAlliance_jScrollPane;
    private javax.swing.JTextArea redAlliance_jTextArea;
    private javax.swing.JTextField rightMotor1_jTextField;
    private javax.swing.JTextField rightMotor2_jTextField;
    private javax.swing.JTextField rightMotor3_jTextField;
    private javax.swing.JTextField rightMotor4_jTextField;
    private javax.swing.JLabel rightMotor_jLabel;
    private javax.swing.JLabel robotDiagram_jLabel;
    private javax.swing.JPanel robotMotors_jPanel;
    private javax.swing.JMenuItem saveAs_jMenuItem;
    private javax.swing.JMenuItem save_jMenuItem;
    private javax.swing.JSlider speedSlider_jSlider;
    private javax.swing.JLabel speed_jLabel;
    private javax.swing.JLabel turnPercentError_jLabel;
    private javax.swing.JTextField turnPercentError_jTextField;
    private javax.swing.JLabel wheelD_jLabel;
    private javax.swing.JTextField wheelD_jTextField;
    private javax.swing.JPanel workspace_jPanel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    
    // Handle all of the animations from the image view
    @Override
    public void actionPerformed(ActionEvent e) {
        Graphics g = fieldView_jPanel.getGraphics();
        
        if(mainTabs_jTabbedPane.getSelectedIndex() != 0){
            g.dispose();
            return;
        }
        
        pointLogic();
        fieldView_jPanel.paintComponents(g);
        
    }
    
    public void pointLogic() {
        java.awt.Point mouse = fieldView_jPanel.getMousePosition();
        if(mouse != null) {
            if(draggedPoint != null) {
                draggedPoint.setX(mouse.x);
                draggedPoint.setY(mouse.y);
            }
        }       
    }
    
    private void selectPointFromList(Point p) {
        
        setSelectedPoint(p);
    }
    
    private void setSelectedPoint(Point p) {
        
        
        if(p == null){
            currentPointName_jTextField.setEnabled(false);
            notes_jTextArea.setEnabled(false);
            speedSlider_jSlider.setEnabled(false);
            return;
        }
        if(selectedPoint != null) { // Save all data
            selectedPoint.setName(currentPointName_jTextField.getText());
            selectedPoint.setNotes(notes_jTextArea.getText());
            selectedPoint.setSpeed(speedSlider_jSlider.getValue());
        }
        
        selectedPoint = p;
        points_jList.setSelectedIndex(pointListModel.indexOf(p));
        
        currentPointName_jTextField.setEnabled(true);
        notes_jTextArea.setEnabled(true);
        speedSlider_jSlider.setEnabled(true);
        
        currentPointName_jTextField.setText(selectedPoint.getName());
        notes_jTextArea.setText(selectedPoint.getNotes());
        speedSlider_jSlider.setValue(selectedPoint.getSpeed());   
    }

    public PointModel getRedPoints() {
        return points;
    }

    public BufferedImage getFieldImage() {
        return fieldImage;
    }

    public Point getSelectedPoint() {
        return selectedPoint;
    }
    
    
    
}
